[{"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/index.js":"1","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/App.js":"2","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/reportWebVitals.js":"3","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/MainPage.js":"4","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/WorldMap/WorldMap.js":"5","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/UnregisteredUserNotification/UnregisteredUserNotification.js":"6","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/Logo/Logo.js":"7","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/SearchBar/SearchBar.js":"8","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/Register.js":"9","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/InputForm.js":"10","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/CreateButton.js":"11","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/CountryPicker.js":"12","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/CountrysMap.js":"13"},{"size":518,"mtime":1610393082000,"results":"14","hashOfConfig":"15"},{"size":553,"mtime":1611298656439,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1610393082000,"results":"17","hashOfConfig":"15"},{"size":603,"mtime":1610801984348,"results":"18","hashOfConfig":"15"},{"size":1560539,"mtime":1610706082000,"results":"19","hashOfConfig":"15"},{"size":593,"mtime":1610722862000,"results":"20","hashOfConfig":"15"},{"size":1109,"mtime":1610802082408,"results":"21","hashOfConfig":"15"},{"size":328,"mtime":1610713780000,"results":"22","hashOfConfig":"15"},{"size":4721,"mtime":1611500660793,"results":"23","hashOfConfig":"15"},{"size":827,"mtime":1611488652448,"results":"24","hashOfConfig":"15"},{"size":271,"mtime":1611475609869,"results":"25","hashOfConfig":"15"},{"size":356,"mtime":1611486335722,"results":"26","hashOfConfig":"15"},{"size":963,"mtime":1611493337852,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15f3804",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/index.js",[],["61","62"],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/App.js",["63","64","65"],"import React from 'react';\r\nimport MainPage from './component/MainPage/MainPage';\r\nimport {Route, BrowserRouter} from 'react-router-dom';\r\nimport WorldMap from \"./component/MainPage/WorldMap/WorldMap\";\r\nimport Register from './component/RegisterForm/Register.js';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className = '\r\n      container-main'>\r\n        {/*<MainPage/>*/}\r\n         {/*<Route path = '' component = {RegisterForm}/> */}\r\n         <Register/>\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/reportWebVitals.js",[],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/MainPage.js",["66","67"],"import React from 'react';\r\nimport WorldMap from './WorldMap/WorldMap';\r\nimport Logo from './Logo/Logo';\r\nimport SearchBar from './SearchBar/SearchBar'\r\nimport UnregisteredUserNotification from '../UnregisteredUserNotification/UnregisteredUserNotification';\r\nimport {Route, BrowserRouter} from 'react-router-dom';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <BrowserRouter>    \r\n    <div >\r\n      <Logo/>\r\n      <WorldMap/>\r\n      <SearchBar/>\r\n      {/*<Route path = '/unregistered' component = {UnregisteredUserNotification}/>*/}\r\n    </div>\r\n    </BrowserRouter>\r\n\r\n  )\r\n}\r\n\r\nexport default MainPage","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/WorldMap/WorldMap.js",[],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/UnregisteredUserNotification/UnregisteredUserNotification.js",[],["68","69"],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/Logo/Logo.js",[],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/MainPage/SearchBar/SearchBar.js",[],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/Register.js",["70","71","72","73"],"import React, {useState}  from 'react'\r\nimport style from './Register.module.css';\r\nimport logo from '../../images/LogoTradoxLogo.svg';\r\nimport InputForm from \"./InputForm\";\r\nimport CreateButton from \"./CreateButton\";\r\nimport Picker from \"./CountryPicker\";\r\nimport myMap from \"../CountrysMap\"\r\n\r\nfunction Register(props) {\r\n\r\n    function getKeysFromMapArr() {\r\n        let arr = []\r\n        for (let [key, value] of myMap) {\r\n            arr.push(key)\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    let [isTapped,tap] = useState(false);\r\n\r\n\r\n    let infoMap = new Map().set(\"firstName\",null).set(\"lastName\",null).set(\"dateOfBirth\",null).set(\"email\",null)\r\n        .set(\"password\",null).set(\"mobilePhone\",null).set(\"passport\",null).set(\"citizenship\",null).set(\"currentCountry\",null);\r\n\r\n    let [state, setState] = useState(infoMap);\r\n\r\n    // function checkInfoMap() {\r\n    //     const keys = infoMap.keys();\r\n    //     for (let [key, value] of infoMap) {\r\n    //         if (value === null) {\r\n    //             alert(key + \" should be written!!!\");\r\n    //             return false;\r\n    //         }\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    function changeInfoMap(inputKey,inputValue) {\r\n        infoMap.set(inputKey,inputValue)\r\n    }\r\n\r\n\r\n    function onClickS(e) {\r\n        e.preventDefault()\r\n        fetch('http://localhost:8080/api/v1/registration/fill/',{method:\"POST\",body: JSON.stringify({\r\n                \"first_name\": state.get(\"firstName\"),\r\n                \"last_name\": state.get(\"lastName\"),\r\n                \"birth_date\": state.get(\"dateOfBirth\"),\r\n                \"email\": state.get(\"email\"),\r\n                \"password\": state.get(\"password\"),\r\n                \"phone\": state.get(\"mobilePhone\"),\r\n                \"passport_id\": state.get(\"passport\"),\r\n                \"citizenship\": myMap.get(state.get(\"citizenship\")),\r\n                \"country_id\": myMap.get(state.get(\"currentCountry\"))\r\n        })}).then(response => {\r\n            if (response.json() === true) {\r\n                tap(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={style.registrationComponent}>\r\n        <div className={style.registerLogo}>\r\n            <img src={logo}/>\r\n        </div>\r\n            {isTapped\r\n                ? <div className={style.verifyTitle}>We send you letter on email. Please, verify to start using your account.</div>\r\n                : (\r\n                <div className={style.userInfo}>\r\n                    <div className={style.title}>\r\n                        Registration\r\n                    </div>\r\n                    <div className={style.info}>\r\n                        <div>\r\n                            <form className={style.form} onSubmit={onClickS}>\r\n                                <InputForm value={state.get(\"firstName\")} type={\"text\"} title={\"First name\"} keyOf={\"firstName\"} placeholder={\"Danylo\"} changeState={changeInfoMap} />\r\n                                <InputForm value={state.get(\"lastName\")} type={\"text\"} title={\"Last name\"} changeState={changeInfoMap} keyOf={\"lastName\"} placeholder={\"Savchak\"}/>\r\n                                <InputForm value={state.get(\"dateOfBirth\")} keyOf={\"dateOfBirth\"} title={\"Date of birth\"} changeState={changeInfoMap} type={\"date\"} />\r\n                                <InputForm value={state.get(\"email\")} keyOf={\"email\"} type={\"text\"} title={\"E-mail\"} changeState={changeInfoMap} placeholder={\"example@gmail.com\"}/>\r\n                                <InputForm value={state.get(\"password\")}  keyOf={\"password\"} type={\"password\"} changeState={changeInfoMap} placeholder={\"*******\"} title={\"Password\"}/>\r\n                                <InputForm value={state.get(\"mobilePhone\")} keyOf={\"mobilePhone\"} type={\"tel\"} changeState={changeInfoMap} title={\"Mobile phone\"} placeholder={\"+39094234433\"}/>\r\n                                <InputForm value={state.get(\"passport\")} keyOf={\"passport\"} type={\"text\"} title={\"Passport\"} changeState={changeInfoMap} placeholder={\"MK212133\"}/>\r\n                                <InputForm value={state.get(\"citizenship\")} keyOf={\"citizenship\"}  type={\"countryPicker\"} changeState={changeInfoMap} title={\"Citizenship\"} placeholder={\"Ukraine\"} array={getKeysFromMapArr()}/>\r\n                                <InputForm value={state.get(\"currentCountry\")} keyOf={\"currentCountry\"}  type={\"countryPicker\"} changeState={changeInfoMap} title={\"Current country\"} placeholder={\"Ukraine\"}  array={getKeysFromMapArr()}/>\r\n                                <CreateButton type={\"submit\"}/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/InputForm.js",[],"/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/CreateButton.js",["74"],"import style from \"./Register.module.css\";\n\nfunction CreateButton(props) {\n    function changeState() {\n\n    }\n    return (\n        <button type={props.type} className={style.createButton}>\n            Create account\n        </button>\n    )\n}\n\nexport default CreateButton","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/RegisterForm/CountryPicker.js",["75"],"import style from './Register.module.css';\n\nfunction Option(props) {\n    return (\n        <option>\n            {props.title}\n        </option>\n    )\n}\n\nfunction Picker(props) {\n\n    return (\n        <select onChange={props.changeState} >\n            {props.array.map((x,y) => <Option title={x} key={y}/>)}\n        </select>\n    )\n}\n\nexport default Picker;\n","/Users/danielsavchak/Developer/Tradox/GitProject/Tradox/tradoxCode/src/main/frontEnd/tradox/src/component/CountrysMap.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":3,"column":9,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"85","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":36},{"ruleId":"80","severity":1,"message":"84","line":6,"column":9,"nodeType":"82","messageId":"83","endLine":6,"endColumn":14},{"ruleId":"76","replacedBy":"87"},{"ruleId":"78","replacedBy":"88"},{"ruleId":"80","severity":1,"message":"89","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":14},{"ruleId":"80","severity":1,"message":"90","line":13,"column":24,"nodeType":"82","messageId":"83","endLine":13,"endColumn":29},{"ruleId":"80","severity":1,"message":"91","line":25,"column":17,"nodeType":"82","messageId":"83","endLine":25,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":65,"column":13,"nodeType":"94","endLine":65,"endColumn":30},{"ruleId":"80","severity":1,"message":"95","line":4,"column":14,"nodeType":"82","messageId":"83","endLine":4,"endColumn":25},{"ruleId":"80","severity":1,"message":"96","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'MainPage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'WorldMap' is defined but never used.","'UnregisteredUserNotification' is defined but never used.",["97"],["98"],"'Picker' is defined but never used.","'value' is assigned a value but never used.","'setState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'changeState' is defined but never used.","'style' is defined but never used.","no-global-assign","no-unsafe-negation"]